<% content_for :head do %>
  <%= stylesheet_link_tag 'cinema_movie_form', media: 'all' %>
<% end %>

<div class="movie-form-container">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-8">
        <div class="form-card ">
          <%= form_with(model: movie, local: true, html: { multipart: true, class: 'movie-form', data: { turbo: false }, authenticity_token: false }) do |form| %>
            <% if movie.errors.any? %>
              <div class="error-alert">
                <h4>
                  <i class="fas fa-exclamation-triangle me-2"></i>
                  <%= pluralize(movie.errors.count, "error") %> prohibited this movie from being saved:
                </h4>
                <ul>
                  <% movie.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>

            <div class="form-group">
              <%= form.label :title, class: 'form-label' do %>
                <i class="fas fa-film me-2"></i>Movie Title
              <% end %>
              <%= form.text_field :title, 
                  class: 'form-control-modern', 
                  placeholder: 'Enter the movie title...',
                  required: true %>
            </div>

            <div class="form-group">
              <%= form.label :description, class: 'form-label' do %>
                <i class="fas fa-align-left me-2"></i>Description
              <% end %>
              <%= form.text_area :description, 
                  class: 'form-control-modern form-textarea', 
                  placeholder: 'Describe the movie plot, themes, and key details...',
                  required: true %>
            </div>

            <div class="form-group">
              <%= form.label :release_date, class: 'form-label' do %>
                <i class="fas fa-calendar-alt me-2"></i>Release Date
              <% end %>
              <%= form.date_field :release_date, 
                  class: 'form-control-modern' %>
            </div>

            <div class="form-group">
              <div class="form-check-modern">
                <%= form.check_box :is_pro, class: 'form-check-input-modern' %>
                <%= form.label :is_pro, class: 'form-check-label-modern' do %>
                  <i class="fas fa-crown me-2"></i>Premium Content (Pro Only)
                <% end %>
              </div>
            </div>

            <div class="form-group" data-controller="file-upload">
              <%= form.label :video_file, class: 'form-label' do %>
                <i class="fas fa-video me-2"></i>Video File
              <% end %>
              <div class="file-input-container">
                <%= form.file_field :video_file, 
                    accept: "video/*",
                    class: 'form-control',
                    data: { file_upload_target: "input" } %>
                <div class="file-input-text" data-file-upload-target="text">
                  <i class="fas fa-cloud-upload-alt mb-2" style="font-size: 2rem; color: #64748b;"></i>
                  <p>Click to upload video or drag and drop</p>
                  <p style="font-size: 0.75rem;">Supported formats: MP4, AVI, MOV</p>
                </div>
              </div>
              <div data-file-upload-target="preview"></div>
            </div>

            <%= form.hidden_field :series_id, value: movie.series_id %>

            <div class="form-group">
              <%= form.label :tags, class: 'form-label' do %>
                <i class="fas fa-tags me-2"></i>Genres & Tags
              <% end %>
              <div class="tags-grid">
                <% selected_tags = (movie.tags + (movie.series&.tags || [])).uniq %>
                <% Tag.all.each do |tag| %>
                  <div class="tag-checkbox">
                    <%= check_box_tag "movie[tag_ids][]", 
                        tag.id, 
                        selected_tags.include?(tag), 
                        id: "tag_#{tag.id}" %>
                    <label for="tag_<%= tag.id %>"><%= tag.name %></label>
                  </div>
                <% end %>
              </div>
            </div>

            <div class="form-group">
              <%= form.submit movie.persisted? ? 'Update Movie' : 'Create Movie', 
                  class: 'submit-button',
                  data: { disable_with: 'Creating Movie...' } %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.querySelector('.movie-form');
  const submitButton = form.querySelector('.submit-button');
  
  console.log('Movie form script loaded', { form, submitButton });
  
  if (form) {
    form.addEventListener('submit', function(e) {
      console.log('Form submit event triggered');
      
      // Check if all required fields are filled
      const title = form.querySelector('input[name="movie[title]"]');
      const description = form.querySelector('textarea[name="movie[description]"]');
      const videoFile = form.querySelector('input[name="movie[video_file]"]');
      
      if (!title || !title.value.trim()) {
        e.preventDefault();
        alert('Please enter a movie title');
        return;
      }
      
      if (!description || !description.value.trim()) {
        e.preventDefault();
        alert('Please enter a description');
        return;
      }
      
      // Check if a video file is selected
      if (!videoFile || !videoFile.files || videoFile.files.length === 0) {
        e.preventDefault();
        alert('Please select a video file to upload');
        return;
      }
      
      // Check file size (warn if over 50MB, allow up to 1GB)
      const file = videoFile.files[0];
      const fileSizeMB = file.size / (1024 * 1024);
      const fileSizeGB = fileSizeMB / 1024;
      
      if (fileSizeMB > 1024) { // Over 1GB
        e.preventDefault();
        alert(`File size is ${fileSizeGB.toFixed(2)}GB. Maximum allowed size is 1GB. Please compress your video or use a smaller file.`);
        return;
      } else if (fileSizeMB > 50) {
        if (!confirm(`The file is ${Math.round(fileSizeMB)}MB (${fileSizeGB.toFixed(2)}GB). Large files may take 30+ minutes to upload. Continue?`)) {
          e.preventDefault();
          return;
        }
      }
      
      console.log('Form validation passed, submitting...');
      
      // Show loading state
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.innerHTML = `
          <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
          Uploading Movie...
        `;
      }
      
      // Show upload progress message
      const progressDiv = document.createElement('div');
      progressDiv.className = 'upload-progress mt-3';
      const timeEstimate = fileSizeMB > 100 ? 'This may take 30+ minutes for very large files.' : 'This may take several minutes for large files.';
      progressDiv.innerHTML = `
        <div class="alert alert-info">
          <i class="fas fa-upload me-2"></i>
          Uploading your movie (${Math.round(fileSizeMB)}MB)... ${timeEstimate}
          <br><small>Please don't close this window or navigate away during upload.</small>
          <div class="mt-2">
            <div class="progress">
              <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%"></div>
            </div>
          </div>
        </div>
      `;
      form.appendChild(progressDiv);
    });
  }
  
  if (submitButton) {
    submitButton.addEventListener('click', function(e) {
      console.log('Submit button clicked');
    });
  }
});
</script>
