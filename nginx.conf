user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 1G;       # Increased to 1GB for movie uploads
    client_body_timeout 1800s;     # 30 minutes for large uploads
    client_header_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 1800s;      # 30 minutes for large uploads
    proxy_read_timeout 1800s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream Rails application
    upstream rails_app {
        server web:3000 fail_timeout=0;
        keepalive 32;
    }

    # Upstream Python AI Microservice
    upstream python_ai {
        server python-ai:8000 fail_timeout=0;
        keepalive 16;
    }

    server {
        listen 80;
        server_name _;
        root /var/www/public;  # This will be the shared volume with Rails static files

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Static assets with long cache - try from volume first
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Try static files from volume first, then proxy to Rails
            try_files $uri @rails;
        }

        # ActiveStorage files (videos, images)
        location /rails/active_storage/ {
            expires 1h;
            add_header Cache-Control "public";
            add_header X-Accel-Buffering "no";  # Disable buffering for large files
            
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;  # Important for large file streaming
            proxy_request_buffering off;
        }

        # Python AI Microservice endpoints
        location /ai/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://python_ai/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;  # Longer timeout for AI processing
            proxy_read_timeout 120s;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Login endpoints with stricter rate limiting
        location /users/sign_in {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
        }

        # Movie upload endpoints (need longer timeouts for 1GB files)
        location /movies {
            client_max_body_size 1G;
            client_body_timeout 1800s;    # 30 minutes
            proxy_connect_timeout 60s;
            proxy_send_timeout 1800s;     # 30 minutes  
            proxy_read_timeout 1800s;     # 30 minutes
            proxy_request_buffering off;  # Important for large uploads
            
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Series upload endpoints (for images, but using same config for consistency)
        location /series {
            client_max_body_size 50M;     # Images shouldn't be this large, but just in case
            client_body_timeout 300s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_request_buffering off;
            
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket support for Action Cable
        location /cable {
            proxy_pass http://rails_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # All other requests to Rails
        location / {
            try_files $uri @rails;
        }

        location @rails {
            proxy_pass http://rails_app;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 422 /422.html;
        error_page 500 502 503 504 /500.html;
    }
}
